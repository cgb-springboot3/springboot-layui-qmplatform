<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qcz.qmplatform.module.business.system.mapper.UserMapper">

    <sql id="userColumns">
        ${alias}.id,
        ${alias}.password,
        ${alias}.username,
        ${alias}.loginname,
        ${alias}.user_sex,
        ${alias}.remark,
        ${alias}.create_time,
        ${alias}.create_user_id,
        ${alias}.phone,
        ${alias}.email_addr,
        ${alias}.locked,
        ${alias}.photo_path
    </sql>

    <select id="queryUserByName" resultType="com.qcz.qmplatform.module.business.system.domain.vo.UserVO">
        select
        <include refid="userColumns"><property name="alias" value="su"/></include>
        from sys_user su
        where su.loginname like #loginName#
    </select>

    <select id="queryAuthoritiesByUserId" resultType="string">
        select
            sp.code
        from
            v_sys_permission sp
            left join sys_role_permission srp on srp.permission_id = sp.permission_id
        where
            sp.code is not null
            and trim(sp.code) != ''
            and exists (
                    select
                        1
                    from
                        sys_user su
                        left join sys_user_role sur on su.id = sur.user_id
                    where
                        sur.role_id = srp.role_id
                        and su.id = #userId#
                  )
    </select>

    <select id="queryUserList" resultType="com.qcz.qmplatform.module.business.system.domain.vo.UserVO">
        select
            su.*,
            coalesce(
                <if test="_databaseId == 'mysql'">group_concat(so.organization_name)</if>
                <if test="_databaseId == 'pg'">string_agg(so.organization_name, ',' )</if>
                , ''
            ) as organization_name
        from
            sys_user su
        left join sys_user_organization suo on su.id = suo.user_id
        left join sys_organization so on suo.organization_id = so.organization_id
        where 1=1
        [[ and su.username like concat(concat('%', #username#), '%') ]]
        [[ and su.user_sex = #userSex# ]]
        <choose>
            <when test="organizationExact == 0">
                [[ and suo.organization_id in(#cascOrganizationIds#) ]]
            </when>
            <otherwise>
                [[ and suo.organization_id in(#organizationIds#) ]]
            </otherwise>
        </choose>
        group by
            su.id
    </select>

    <select id="queryByRoleSign" resultType="com.qcz.qmplatform.module.business.system.domain.vo.UserVO">
        select
        <include refid="userColumns"><property name="alias" value="su"/></include>
        from
            sys_user su
            left join sys_user_role sur on su.id = sur.user_id
            left join sys_role sr on sur.role_id = sr.role_id
        where
            sr.role_sign = #roleSign#
    </select>

    <select id="getUserGroupUserList" resultType="com.qcz.qmplatform.module.business.system.domain.vo.UserGroupUserVO">
        select
            suug.user_id,
            su.username,
            so.organization_name
        from
            sys_user_user_group suug
        left join sys_user su on su.id = suug.user_id
        left join sys_user_organization suo on suo.user_id = su.id
        left join sys_organization so on so.organization_id = suo.organization_id
        where
            suug.user_group_id = #userGroupId#
        [[ and su.username like concat(concat('%', #username#), '%') ]]
        [[ and so.organization_id = #organizationId# ]]
    </select>
</mapper>
